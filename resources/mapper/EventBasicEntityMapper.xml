<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uec.web.event.dao.EventBasicEntityMapper">
  <resultMap id="BaseResultMap" type="com.uec.web.event.model.EventBasicEntity">
    <id column="event_code" jdbcType="VARCHAR" property="eventCode" />
    <result column="event_name" jdbcType="VARCHAR" property="eventName" />
    <result column="classification" jdbcType="INTEGER" property="classification" />
    <result column="create_datetime" jdbcType="TIMESTAMP" property="createDatetime" />
    <result column="occur_datetime" jdbcType="TIMESTAMP" property="occurDatetime" />
    <result column="latest_news_time" jdbcType="TIMESTAMP" property="latestNewsTime" />
    <result column="last_query_time" jdbcType="TIMESTAMP" property="lastQueryTime" />
    <result column="end_datetime" jdbcType="TIMESTAMP" property="endDatetime" />
    <result column="awake_datetime" jdbcType="TIMESTAMP" property="awakeDatetime" />
    <result column="pic_path" jdbcType="VARCHAR" property="picPath" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="is_calendar" jdbcType="INTEGER" property="isCalendar" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="news_num" jdbcType="INTEGER" property="newsNum" />
    <result column="update_num" jdbcType="INTEGER" property="updateNum" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="tenant_id" jdbcType="INTEGER" property="tenantId" />
    <result column="event_hot" jdbcType="REAL" property="eventHot" />
    <result column="is_history" jdbcType="INTEGER" property="isHistory" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="browse_num" jdbcType="INTEGER" property="browseNum" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.uec.web.event.model.EventBasicEntityWithBLOBs">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="keywords" jdbcType="LONGVARCHAR" property="keywords" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    event_code, event_name, classification, create_datetime, occur_datetime, latest_news_time, 
    last_query_time, end_datetime, awake_datetime, pic_path, level, is_calendar, is_deleted, 
    news_num, update_num, user_id, tenant_id, event_hot, is_history, status, browse_num
  </sql>
  <sql id="Blob_Column_List">
    description, keywords
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.uec.web.event.model.EventBasicEntityExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from event_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.uec.web.event.model.EventBasicEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from event_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from event_basic
    where event_code = #{eventCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from event_basic
    where event_code = #{eventCode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.uec.web.event.model.EventBasicEntityExample">
    delete from event_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.uec.web.event.model.EventBasicEntityWithBLOBs">
    insert into event_basic (event_code, event_name, classification, 
      create_datetime, occur_datetime, latest_news_time, 
      last_query_time, end_datetime, awake_datetime, 
      pic_path, level, is_calendar, 
      is_deleted, news_num, update_num, 
      user_id, tenant_id, event_hot, 
      is_history, status, browse_num, 
      description, keywords)
    values (#{eventCode,jdbcType=VARCHAR}, #{eventName,jdbcType=VARCHAR}, #{classification,jdbcType=INTEGER}, 
      #{createDatetime,jdbcType=TIMESTAMP}, #{occurDatetime,jdbcType=TIMESTAMP}, #{latestNewsTime,jdbcType=TIMESTAMP}, 
      #{lastQueryTime,jdbcType=TIMESTAMP}, #{endDatetime,jdbcType=TIMESTAMP}, #{awakeDatetime,jdbcType=TIMESTAMP}, 
      #{picPath,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{isCalendar,jdbcType=INTEGER}, 
      #{isDeleted,jdbcType=INTEGER}, #{newsNum,jdbcType=INTEGER}, #{updateNum,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{tenantId,jdbcType=INTEGER}, #{eventHot,jdbcType=REAL}, 
      #{isHistory,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{browseNum,jdbcType=INTEGER}, 
      #{description,jdbcType=LONGVARCHAR}, #{keywords,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.uec.web.event.model.EventBasicEntityWithBLOBs">
    insert into event_basic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eventCode != null">
        event_code,
      </if>
      <if test="eventName != null">
        event_name,
      </if>
      <if test="classification != null">
        classification,
      </if>
      <if test="createDatetime != null">
        create_datetime,
      </if>
      <if test="occurDatetime != null">
        occur_datetime,
      </if>
      <if test="latestNewsTime != null">
        latest_news_time,
      </if>
      <if test="lastQueryTime != null">
        last_query_time,
      </if>
      <if test="endDatetime != null">
        end_datetime,
      </if>
      <if test="awakeDatetime != null">
        awake_datetime,
      </if>
      <if test="picPath != null">
        pic_path,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="isCalendar != null">
        is_calendar,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="newsNum != null">
        news_num,
      </if>
      <if test="updateNum != null">
        update_num,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="eventHot != null">
        event_hot,
      </if>
      <if test="isHistory != null">
        is_history,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="browseNum != null">
        browse_num,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="keywords != null">
        keywords,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eventCode != null">
        #{eventCode,jdbcType=VARCHAR},
      </if>
      <if test="eventName != null">
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="classification != null">
        #{classification,jdbcType=INTEGER},
      </if>
      <if test="createDatetime != null">
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="occurDatetime != null">
        #{occurDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="latestNewsTime != null">
        #{latestNewsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastQueryTime != null">
        #{lastQueryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endDatetime != null">
        #{endDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="awakeDatetime != null">
        #{awakeDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="picPath != null">
        #{picPath,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="isCalendar != null">
        #{isCalendar,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="newsNum != null">
        #{newsNum,jdbcType=INTEGER},
      </if>
      <if test="updateNum != null">
        #{updateNum,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="eventHot != null">
        #{eventHot,jdbcType=REAL},
      </if>
      <if test="isHistory != null">
        #{isHistory,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="browseNum != null">
        #{browseNum,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="keywords != null">
        #{keywords,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.uec.web.event.model.EventBasicEntityExample" resultType="java.lang.Long">
    select count(*) from event_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update event_basic
    <set>
      <if test="record.eventCode != null">
        event_code = #{record.eventCode,jdbcType=VARCHAR},
      </if>
      <if test="record.eventName != null">
        event_name = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.classification != null">
        classification = #{record.classification,jdbcType=INTEGER},
      </if>
      <if test="record.createDatetime != null">
        create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.occurDatetime != null">
        occur_datetime = #{record.occurDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.latestNewsTime != null">
        latest_news_time = #{record.latestNewsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastQueryTime != null">
        last_query_time = #{record.lastQueryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDatetime != null">
        end_datetime = #{record.endDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.awakeDatetime != null">
        awake_datetime = #{record.awakeDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.picPath != null">
        pic_path = #{record.picPath,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.isCalendar != null">
        is_calendar = #{record.isCalendar,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
      <if test="record.newsNum != null">
        news_num = #{record.newsNum,jdbcType=INTEGER},
      </if>
      <if test="record.updateNum != null">
        update_num = #{record.updateNum,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=INTEGER},
      </if>
      <if test="record.eventHot != null">
        event_hot = #{record.eventHot,jdbcType=REAL},
      </if>
      <if test="record.isHistory != null">
        is_history = #{record.isHistory,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.browseNum != null">
        browse_num = #{record.browseNum,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.keywords != null">
        keywords = #{record.keywords,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update event_basic
    set event_code = #{record.eventCode,jdbcType=VARCHAR},
      event_name = #{record.eventName,jdbcType=VARCHAR},
      classification = #{record.classification,jdbcType=INTEGER},
      create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      occur_datetime = #{record.occurDatetime,jdbcType=TIMESTAMP},
      latest_news_time = #{record.latestNewsTime,jdbcType=TIMESTAMP},
      last_query_time = #{record.lastQueryTime,jdbcType=TIMESTAMP},
      end_datetime = #{record.endDatetime,jdbcType=TIMESTAMP},
      awake_datetime = #{record.awakeDatetime,jdbcType=TIMESTAMP},
      pic_path = #{record.picPath,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      is_calendar = #{record.isCalendar,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      news_num = #{record.newsNum,jdbcType=INTEGER},
      update_num = #{record.updateNum,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      tenant_id = #{record.tenantId,jdbcType=INTEGER},
      event_hot = #{record.eventHot,jdbcType=REAL},
      is_history = #{record.isHistory,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      browse_num = #{record.browseNum,jdbcType=INTEGER},
      description = #{record.description,jdbcType=LONGVARCHAR},
      keywords = #{record.keywords,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update event_basic
    set event_code = #{record.eventCode,jdbcType=VARCHAR},
      event_name = #{record.eventName,jdbcType=VARCHAR},
      classification = #{record.classification,jdbcType=INTEGER},
      create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      occur_datetime = #{record.occurDatetime,jdbcType=TIMESTAMP},
      latest_news_time = #{record.latestNewsTime,jdbcType=TIMESTAMP},
      last_query_time = #{record.lastQueryTime,jdbcType=TIMESTAMP},
      end_datetime = #{record.endDatetime,jdbcType=TIMESTAMP},
      awake_datetime = #{record.awakeDatetime,jdbcType=TIMESTAMP},
      pic_path = #{record.picPath,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      is_calendar = #{record.isCalendar,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      news_num = #{record.newsNum,jdbcType=INTEGER},
      update_num = #{record.updateNum,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      tenant_id = #{record.tenantId,jdbcType=INTEGER},
      event_hot = #{record.eventHot,jdbcType=REAL},
      is_history = #{record.isHistory,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      browse_num = #{record.browseNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.uec.web.event.model.EventBasicEntityWithBLOBs">
    update event_basic
    <set>
      <if test="eventName != null">
        event_name = #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="classification != null">
        classification = #{classification,jdbcType=INTEGER},
      </if>
      <if test="createDatetime != null">
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="occurDatetime != null">
        occur_datetime = #{occurDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="latestNewsTime != null">
        latest_news_time = #{latestNewsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastQueryTime != null">
        last_query_time = #{lastQueryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endDatetime != null">
        end_datetime = #{endDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="awakeDatetime != null">
        awake_datetime = #{awakeDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="picPath != null">
        pic_path = #{picPath,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="isCalendar != null">
        is_calendar = #{isCalendar,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="newsNum != null">
        news_num = #{newsNum,jdbcType=INTEGER},
      </if>
      <if test="updateNum != null">
        update_num = #{updateNum,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="eventHot != null">
        event_hot = #{eventHot,jdbcType=REAL},
      </if>
      <if test="isHistory != null">
        is_history = #{isHistory,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="browseNum != null">
        browse_num = #{browseNum,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="keywords != null">
        keywords = #{keywords,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where event_code = #{eventCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.uec.web.event.model.EventBasicEntityWithBLOBs">
    update event_basic
    set event_name = #{eventName,jdbcType=VARCHAR},
      classification = #{classification,jdbcType=INTEGER},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      occur_datetime = #{occurDatetime,jdbcType=TIMESTAMP},
      latest_news_time = #{latestNewsTime,jdbcType=TIMESTAMP},
      last_query_time = #{lastQueryTime,jdbcType=TIMESTAMP},
      end_datetime = #{endDatetime,jdbcType=TIMESTAMP},
      awake_datetime = #{awakeDatetime,jdbcType=TIMESTAMP},
      pic_path = #{picPath,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      is_calendar = #{isCalendar,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      news_num = #{newsNum,jdbcType=INTEGER},
      update_num = #{updateNum,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      tenant_id = #{tenantId,jdbcType=INTEGER},
      event_hot = #{eventHot,jdbcType=REAL},
      is_history = #{isHistory,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      browse_num = #{browseNum,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR},
      keywords = #{keywords,jdbcType=LONGVARCHAR}
    where event_code = #{eventCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uec.web.event.model.EventBasicEntity">
    update event_basic
    set event_name = #{eventName,jdbcType=VARCHAR},
      classification = #{classification,jdbcType=INTEGER},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      occur_datetime = #{occurDatetime,jdbcType=TIMESTAMP},
      latest_news_time = #{latestNewsTime,jdbcType=TIMESTAMP},
      last_query_time = #{lastQueryTime,jdbcType=TIMESTAMP},
      end_datetime = #{endDatetime,jdbcType=TIMESTAMP},
      awake_datetime = #{awakeDatetime,jdbcType=TIMESTAMP},
      pic_path = #{picPath,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      is_calendar = #{isCalendar,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      news_num = #{newsNum,jdbcType=INTEGER},
      update_num = #{updateNum,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      tenant_id = #{tenantId,jdbcType=INTEGER},
      event_hot = #{eventHot,jdbcType=REAL},
      is_history = #{isHistory,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      browse_num = #{browseNum,jdbcType=INTEGER}
    where event_code = #{eventCode,jdbcType=VARCHAR}
  </update>
</mapper>