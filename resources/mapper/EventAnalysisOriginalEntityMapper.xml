<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uec.web.event.dao.EventAnalysisOriginalEntityMapper">
  <resultMap id="BaseResultMap" type="com.uec.web.event.model.EventAnalysisOriginalEntity">
    <id column="innerid" jdbcType="INTEGER" property="innerid" />
    <result column="analysis_name" jdbcType="VARCHAR" property="analysisName" />
    <result column="event_code" jdbcType="VARCHAR" property="eventCode" />
    <result column="create_datetime" jdbcType="TIMESTAMP" property="createDatetime" />
    <result column="update_datetime" jdbcType="TIMESTAMP" property="updateDatetime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.uec.web.event.model.EventAnalysisOriginalEntity">
    <result column="analysis_value" jdbcType="LONGVARCHAR" property="analysisValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    innerid, analysis_name, event_code, create_datetime, update_datetime
  </sql>
  <sql id="Blob_Column_List">
    analysis_value
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.uec.web.event.model.EventAnalysisOriginalEntityExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from event_analysis_original
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.uec.web.event.model.EventAnalysisOriginalEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from event_analysis_original
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from event_analysis_original
    where innerid = #{innerid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from event_analysis_original
    where innerid = #{innerid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.uec.web.event.model.EventAnalysisOriginalEntityExample">
    delete from event_analysis_original
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.uec.web.event.model.EventAnalysisOriginalEntity">
    insert into event_analysis_original (innerid, analysis_name, event_code, 
      create_datetime, update_datetime, analysis_value
      )
    values (#{innerid,jdbcType=INTEGER}, #{analysisName,jdbcType=VARCHAR}, #{eventCode,jdbcType=VARCHAR}, 
      #{createDatetime,jdbcType=TIMESTAMP}, #{updateDatetime,jdbcType=TIMESTAMP}, #{analysisValue,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.uec.web.event.model.EventAnalysisOriginalEntity">
    insert into event_analysis_original
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="innerid != null">
        innerid,
      </if>
      <if test="analysisName != null">
        analysis_name,
      </if>
      <if test="eventCode != null">
        event_code,
      </if>
      <if test="createDatetime != null">
        create_datetime,
      </if>
      <if test="updateDatetime != null">
        update_datetime,
      </if>
      <if test="analysisValue != null">
        analysis_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="innerid != null">
        #{innerid,jdbcType=INTEGER},
      </if>
      <if test="analysisName != null">
        #{analysisName,jdbcType=VARCHAR},
      </if>
      <if test="eventCode != null">
        #{eventCode,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null">
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDatetime != null">
        #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisValue != null">
        #{analysisValue,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.uec.web.event.model.EventAnalysisOriginalEntityExample" resultType="java.lang.Long">
    select count(*) from event_analysis_original
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update event_analysis_original
    <set>
      <if test="record.innerid != null">
        innerid = #{record.innerid,jdbcType=INTEGER},
      </if>
      <if test="record.analysisName != null">
        analysis_name = #{record.analysisName,jdbcType=VARCHAR},
      </if>
      <if test="record.eventCode != null">
        event_code = #{record.eventCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createDatetime != null">
        create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDatetime != null">
        update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.analysisValue != null">
        analysis_value = #{record.analysisValue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update event_analysis_original
    set innerid = #{record.innerid,jdbcType=INTEGER},
      analysis_name = #{record.analysisName,jdbcType=VARCHAR},
      event_code = #{record.eventCode,jdbcType=VARCHAR},
      create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      analysis_value = #{record.analysisValue,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update event_analysis_original
    set innerid = #{record.innerid,jdbcType=INTEGER},
      analysis_name = #{record.analysisName,jdbcType=VARCHAR},
      event_code = #{record.eventCode,jdbcType=VARCHAR},
      create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.uec.web.event.model.EventAnalysisOriginalEntity">
    update event_analysis_original
    <set>
      <if test="analysisName != null">
        analysis_name = #{analysisName,jdbcType=VARCHAR},
      </if>
      <if test="eventCode != null">
        event_code = #{eventCode,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null">
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDatetime != null">
        update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisValue != null">
        analysis_value = #{analysisValue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where innerid = #{innerid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.uec.web.event.model.EventAnalysisOriginalEntity">
    update event_analysis_original
    set analysis_name = #{analysisName,jdbcType=VARCHAR},
      event_code = #{eventCode,jdbcType=VARCHAR},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      analysis_value = #{analysisValue,jdbcType=LONGVARCHAR}
    where innerid = #{innerid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uec.web.event.model.EventAnalysisOriginalEntity">
    update event_analysis_original
    set analysis_name = #{analysisName,jdbcType=VARCHAR},
      event_code = #{eventCode,jdbcType=VARCHAR},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      update_datetime = #{updateDatetime,jdbcType=TIMESTAMP}
    where innerid = #{innerid,jdbcType=INTEGER}
  </update>
</mapper>